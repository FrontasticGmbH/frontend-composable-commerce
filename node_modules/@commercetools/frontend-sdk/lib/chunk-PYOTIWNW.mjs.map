{"version":3,"sources":["../src/helpers/oldCookieManagement.ts"],"sourcesContent":["import { IncomingMessage, ServerResponse } from \"http\";\nimport { ServerOptions } from \"../types/cookieHandling\";\nimport { CookieHandlerSync } from \"../library/oldCookieHandler\";\nimport { REMEMBER_ME_COOKIE_KEY } from \"../constants/rememberMeCookieKey\";\n\n/**\n * @deprecated Use rememberMeCookieAsync instead. An object containing helper methods for interacting with the remember me cookie, is not compatible with optional cookieHandlingOverride passed in SDK.configure.\n */\nexport const rememberMeCookie = {\n\t/**\n\t * @deprecated Use rememberMeCookieAsync.get instead. Gets the remember me cookie, is not compatible with optional cookieHandlingOverride passed in SDK.configure.\n\t *\n\t * @param {ServerOptions} [serverOptions] - An optional {@link ServerOptions} object containing the res and req objects for ServerResponse and IncomingMessage with cookies respectively. Required for server-side rendering session management.\n\t *\n\t * @returns {boolean} A boolean indicating whether or not the user is to be remembered.\n\t */\n\tget: function (serverOptions?: ServerOptions): boolean {\n\t\tif (\n\t\t\tCookieHandlerSync.getCookie(REMEMBER_ME_COOKIE_KEY, serverOptions)\n\t\t) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\t/**\n\t * @deprecated Use rememberMeCookieAsync.get instead. Sets the remember me cookie, is not compatible with optional cookieHandlingOverride passed in SDK.configure.\n\t *\n\t * @param {boolean} rememberMe - The value in which to set the remember me cookie.\n\t * @param {ServerOptions} [serverOptions] - An optional {@link ServerOptions} object containing the res and req objects for ServerResponse and IncomingMessage with cookies respectively. Required for server-side rendering session management.\n\t *\n\t * @returns {void} Void.\n\t */\n\tset: function (rememberMe: boolean, serverOptions?: ServerOptions) {\n\t\tif (rememberMe) {\n\t\t\treturn CookieHandlerSync.setCookie(\n\t\t\t\tREMEMBER_ME_COOKIE_KEY,\n\t\t\t\t\"1\",\n\t\t\t\tserverOptions\n\t\t\t);\n\t\t} else {\n\t\t\tthis.remove();\n\t\t}\n\t},\n\t/**\n\t * @deprecated Use rememberMeCookieAsync.remove instead. Removes the remember me cookie, is not compatible with optional cookieHandlingOverride passed in SDK.configure.\n\t *\n\t * @param {ServerOptions} [serverOptions] - An optional {@link ServerOptions} object containing the res and req objects for ServerResponse and IncomingMessage with cookies respectively. Required for server-side rendering session management.\n\t *\n\t * @returns {void} Void.\n\t */\n\tremove: function (serverOptions?: ServerOptions) {\n\t\treturn CookieHandlerSync.deleteCookie(\n\t\t\tREMEMBER_ME_COOKIE_KEY,\n\t\t\tserverOptions\n\t\t);\n\t},\n};\n\n/**\n * @deprecated An object containing helper methods for interacting with the server session.\n */\nexport const serverSession = {\n\t/**\n\t * @deprecated Pass the {@link IncomingMessage} and {@link ServerResponse} to cookie helpers directly instead. Used to retieve the session string, is not compatible with optional cookieHandlingOverride passed in SDK.configure.\n\t *\n\t * @param {IncomingMessage} req - The incoming message created by the server.\n\t * @param {ServerResponse} res - The server response object created by the server.\n\t */\n\tget: function (\n\t\treq: IncomingMessage,\n\t\tres: ServerResponse\n\t): string | undefined {\n\t\treturn CookieHandlerSync.getCookie(\"frontastic-session\", {\n\t\t\treq,\n\t\t\tres,\n\t\t})?.toString();\n\t},\n};\n"],"mappings":";;;;;;;;AAQO,IAAM,mBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQ/B,KAAK,SAAU,eAAwC;AACtD,QACC,kBAAkB,UAAU,wBAAwB,aAAa,GAChE;AACD,aAAO;AAAA,IACR;AACA,WAAO;AAAA,EACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,KAAK,SAAU,YAAqB,eAA+B;AAClE,QAAI,YAAY;AACf,aAAO,kBAAkB;AAAA,QACxB;AAAA,QACA;AAAA,QACA;AAAA,MACD;AAAA,IACD,OAAO;AACN,WAAK,OAAO;AAAA,IACb;AAAA,EACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,QAAQ,SAAU,eAA+B;AAChD,WAAO,kBAAkB;AAAA,MACxB;AAAA,MACA;AAAA,IACD;AAAA,EACD;AACD;AAKO,IAAM,gBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAO5B,KAAK,SACJ,KACA,KACqB;AACrB,WAAO,kBAAkB,UAAU,sBAAsB;AAAA,MACxD;AAAA,MACA;AAAA,IACD,CAAC,GAAG,SAAS;AAAA,EACd;AACD;","names":[]}