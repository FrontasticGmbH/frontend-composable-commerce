{"version":3,"sources":["../src/helpers/fetcher.ts"],"sourcesContent":["import { DEFAULT_SESSION_LIFETIME } from \"../constants/defaultSessionLifetime\";\nimport { ServerOptions } from \"../types/cookieHandling\";\nimport { rememberMeCookieAsync } from \"./cookieManagement\";\nimport { FetchError } from \"../library/FetchError\";\nimport { dependencyContainer } from \"../library/DependencyContainer\";\n\nexport const fetcher = async <T>(\n\turl: string,\n\toptions: RequestInit,\n\tserverOptions?: ServerOptions,\n\tsessionLifetime?: number\n): Promise<T | FetchError> => {\n\tdependencyContainer().throwIfDINotConfigured();\n\tlet sessionCookie = (await dependencyContainer().cookieHandler.getCookie(\n\t\t\"frontastic-session\",\n\t\tserverOptions\n\t)) as string;\n\tsessionCookie = sessionCookie ?? \"\";\n\tconst incomingHeaders: { [key: string]: any } = serverOptions?.req\n\t\t? { ...serverOptions.req.headers }\n\t\t: {};\n\tdelete incomingHeaders[\"host\"];\n\tdelete incomingHeaders[\"cookie\"];\n\n\toptions.headers = {\n\t\t\"Content-Type\": \"application/json\",\n\t\tAccept: \"application/json\",\n\t\t\"X-Frontastic-Access-Token\": \"APIKEY\",\n\t\t...(options.headers || {}),\n\t\t...(sessionCookie ? { \"Frontastic-Session\": sessionCookie } : {}),\n\t\t...incomingHeaders,\n\t};\n\n\tconst response: Response = await fetch(url, options);\n\n\tif (response.ok && response.headers.has(\"Frontastic-Session\")) {\n\t\tlet rememberMe = await rememberMeCookieAsync.get();\n\t\tlet expiryDate;\n\n\t\tif (rememberMe) {\n\t\t\texpiryDate = new Date(\n\t\t\t\tDate.now() + (sessionLifetime ?? DEFAULT_SESSION_LIFETIME)\n\t\t\t);\n\t\t}\n\t\tawait dependencyContainer().cookieHandler.setCookie(\n\t\t\t\"frontastic-session\",\n\t\t\tresponse.headers.get(\"Frontastic-Session\")!,\n\t\t\t{ expires: expiryDate, ...(serverOptions ?? {}) }\n\t\t);\n\t}\n\n\tif (response.ok) {\n\t\treturn response.json();\n\t}\n\n\tlet error: Error | string;\n\n\ttry {\n\t\terror = await response.clone().json();\n\t} catch (e) {\n\t\terror = await response.text();\n\t}\n\n\treturn new FetchError(error);\n};\n"],"mappings":";;;;;;;;;;;;;;AAMO,IAAM,UAAU,OACtB,KACA,SACA,eACA,oBAC6B;AAC7B,sBAAoB,EAAE,uBAAuB;AAC7C,MAAI,gBAAiB,MAAM,oBAAoB,EAAE,cAAc;AAAA,IAC9D;AAAA,IACA;AAAA,EACD;AACA,kBAAgB,iBAAiB;AACjC,QAAM,kBAA0C,eAAe,MAC5D,EAAE,GAAG,cAAc,IAAI,QAAQ,IAC/B,CAAC;AACJ,SAAO,gBAAgB,MAAM;AAC7B,SAAO,gBAAgB,QAAQ;AAE/B,UAAQ,UAAU;AAAA,IACjB,gBAAgB;AAAA,IAChB,QAAQ;AAAA,IACR,6BAA6B;AAAA,IAC7B,GAAI,QAAQ,WAAW,CAAC;AAAA,IACxB,GAAI,gBAAgB,EAAE,sBAAsB,cAAc,IAAI,CAAC;AAAA,IAC/D,GAAG;AAAA,EACJ;AAEA,QAAM,WAAqB,MAAM,MAAM,KAAK,OAAO;AAEnD,MAAI,SAAS,MAAM,SAAS,QAAQ,IAAI,oBAAoB,GAAG;AAC9D,QAAI,aAAa,MAAM,sBAAsB,IAAI;AACjD,QAAI;AAEJ,QAAI,YAAY;AACf,mBAAa,IAAI;AAAA,QAChB,KAAK,IAAI,KAAK,mBAAmB;AAAA,MAClC;AAAA,IACD;AACA,UAAM,oBAAoB,EAAE,cAAc;AAAA,MACzC;AAAA,MACA,SAAS,QAAQ,IAAI,oBAAoB;AAAA,MACzC,EAAE,SAAS,YAAY,GAAI,iBAAiB,CAAC,EAAG;AAAA,IACjD;AAAA,EACD;AAEA,MAAI,SAAS,IAAI;AAChB,WAAO,SAAS,KAAK;AAAA,EACtB;AAEA,MAAI;AAEJ,MAAI;AACH,YAAQ,MAAM,SAAS,MAAM,EAAE,KAAK;AAAA,EACrC,SAAS,GAAP;AACD,YAAQ,MAAM,SAAS,KAAK;AAAA,EAC7B;AAEA,SAAO,IAAI,WAAW,KAAK;AAC5B;","names":[]}