// src/library/Event.ts
var Event = class {
  /**
   * The name of the event, will match the key of the specific event.
   */
  eventName;
  /**
   * The data associated with the event, will match the value of the specific event and be the parameter supplied to the event handler.
   */
  data;
  isDefaultPrevented;
  isCancelled;
  isPropagationStopped;
  /**
   * Contructor.
   *
   * @param {EventName} options.eventName - The name of the event being created, will match the key of the specific event.
   * @param {EventData} options.data - The data associated with the event being created, will match the value of the specific event and be the parameter supplied to the event handler.
   */
  constructor(options) {
    this.eventName = options.eventName;
    this.data = options.data;
    this.isCancelled = false;
    this.isDefaultPrevented = false;
    this.isPropagationStopped = false;
  }
  preventDefault() {
    this.isDefaultPrevented = true;
  }
  cancel() {
    this.isCancelled = true;
  }
  stopPropagation() {
    this.isPropagationStopped = true;
  }
};

export {
  Event
};
//# sourceMappingURL=chunk-CE4W34DZ.mjs.map