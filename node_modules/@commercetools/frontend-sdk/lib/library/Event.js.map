{"version":3,"sources":["../../src/library/Event.ts"],"sourcesContent":["/**\n * The class represeting the Event type to be passed to the EventManager's trigger function.\n *\n * @param {EventName} EventName - The name of the event being created, will match the key of the specific event.\n * @param {EventData} EventData - The data associated with the event being created, will match the value of the specific event and be the parameter supplied to the event handler.\n */\nexport class Event<\n\tEventName extends string = string,\n\tEventData extends any = void\n> {\n\t/**\n\t * The name of the event, will match the key of the specific event.\n\t */\n\tpublic eventName: EventName;\n\t/**\n\t * The data associated with the event, will match the value of the specific event and be the parameter supplied to the event handler.\n\t */\n\tpublic data: EventData;\n\tpublic isDefaultPrevented: boolean;\n\tpublic isCancelled: boolean;\n\tpublic isPropagationStopped: boolean;\n\n\t/**\n\t * Contructor.\n\t *\n\t * @param {EventName} options.eventName - The name of the event being created, will match the key of the specific event.\n\t * @param {EventData} options.data - The data associated with the event being created, will match the value of the specific event and be the parameter supplied to the event handler.\n\t */\n\tconstructor(options: { eventName: EventName; data: EventData }) {\n\t\tthis.eventName = options.eventName;\n\t\tthis.data = options.data;\n\n\t\tthis.isCancelled = false;\n\t\tthis.isDefaultPrevented = false;\n\t\tthis.isPropagationStopped = false;\n\t}\n\n\tpublic preventDefault(): void {\n\t\tthis.isDefaultPrevented = true;\n\t}\n\n\tpublic cancel(): void {\n\t\tthis.isCancelled = true;\n\t}\n\n\tpublic stopPropagation(): void {\n\t\tthis.isPropagationStopped = true;\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAMO,IAAM,QAAN,MAGL;AAAA;AAAA;AAAA;AAAA,EAIM;AAAA;AAAA;AAAA;AAAA,EAIA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQP,YAAY,SAAoD;AAC/D,SAAK,YAAY,QAAQ;AACzB,SAAK,OAAO,QAAQ;AAEpB,SAAK,cAAc;AACnB,SAAK,qBAAqB;AAC1B,SAAK,uBAAuB;AAAA,EAC7B;AAAA,EAEO,iBAAuB;AAC7B,SAAK,qBAAqB;AAAA,EAC3B;AAAA,EAEO,SAAe;AACrB,SAAK,cAAc;AAAA,EACpB;AAAA,EAEO,kBAAwB;AAC9B,SAAK,uBAAuB;AAAA,EAC7B;AACD;","names":[]}