"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/library/Event.ts
var Event_exports = {};
__export(Event_exports, {
  Event: () => Event
});
module.exports = __toCommonJS(Event_exports);
var Event = class {
  /**
   * The name of the event, will match the key of the specific event.
   */
  eventName;
  /**
   * The data associated with the event, will match the value of the specific event and be the parameter supplied to the event handler.
   */
  data;
  isDefaultPrevented;
  isCancelled;
  isPropagationStopped;
  /**
   * Contructor.
   *
   * @param {EventName} options.eventName - The name of the event being created, will match the key of the specific event.
   * @param {EventData} options.data - The data associated with the event being created, will match the value of the specific event and be the parameter supplied to the event handler.
   */
  constructor(options) {
    this.eventName = options.eventName;
    this.data = options.data;
    this.isCancelled = false;
    this.isDefaultPrevented = false;
    this.isPropagationStopped = false;
  }
  preventDefault() {
    this.isDefaultPrevented = true;
  }
  cancel() {
    this.isCancelled = true;
  }
  stopPropagation() {
    this.isPropagationStopped = true;
  }
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  Event
});
//# sourceMappingURL=Event.js.map