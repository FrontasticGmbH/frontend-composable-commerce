{"version":3,"sources":["../../src/library/DependencyContainer.ts","../../src/constants/sdkNotConfiguredErrorMessage.ts"],"sourcesContent":["import { SDK_NOT_CONFIGURED_ERROR_MESSAGE } from \"../constants\";\nimport { CookieManager } from \"../types/cookieHandling/CookieManager\";\n\nclass DependencyContainer {\n\thasBeenConfigured: boolean;\n\tprivate _cookieHandler!: CookieManager;\n\n\tconstructor() {\n\t\tthis.hasBeenConfigured = false;\n\t}\n\n\tget cookieHandler(): CookieManager {\n\t\treturn this._cookieHandler;\n\t}\n\n\tset cookieHandler(cookierHandler: CookieManager) {\n\t\tthis._cookieHandler = cookierHandler;\n\t}\n\n\tconfigure(cookieHandler: CookieManager) {\n\t\tthis.hasBeenConfigured = true;\n\t\tthis.cookieHandler = cookieHandler;\n\t}\n\n\tthrowIfDINotConfigured = () => {\n\t\tif (!this.hasBeenConfigured) {\n\t\t\tthrow new Error(SDK_NOT_CONFIGURED_ERROR_MESSAGE);\n\t\t}\n\t};\n}\n\nclass Wrapper {\n\tdependencyContainer!: DependencyContainer;\n\n\tconstructor() {\n\t\tthis.dependencyContainer = new DependencyContainer();\n\t}\n\n\tgetDependencyContainer = () => this.dependencyContainer;\n}\n\nconst wrapper = new Wrapper();\nconst dependencyContainer = wrapper.getDependencyContainer;\n\nexport { dependencyContainer };\n","export const SDK_NOT_CONFIGURED_ERROR_MESSAGE =\n\t\"The SDK has not been configured. Please call .configure on the base SDK before you call any other methods\";\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAO,IAAM,mCACZ;;;ADED,IAAM,sBAAN,MAA0B;AAAA,EACzB;AAAA,EACQ;AAAA,EAER,cAAc;AACb,SAAK,oBAAoB;AAAA,EAC1B;AAAA,EAEA,IAAI,gBAA+B;AAClC,WAAO,KAAK;AAAA,EACb;AAAA,EAEA,IAAI,cAAc,gBAA+B;AAChD,SAAK,iBAAiB;AAAA,EACvB;AAAA,EAEA,UAAU,eAA8B;AACvC,SAAK,oBAAoB;AACzB,SAAK,gBAAgB;AAAA,EACtB;AAAA,EAEA,yBAAyB,MAAM;AAC9B,QAAI,CAAC,KAAK,mBAAmB;AAC5B,YAAM,IAAI,MAAM,gCAAgC;AAAA,IACjD;AAAA,EACD;AACD;AAEA,IAAM,UAAN,MAAc;AAAA,EACb;AAAA,EAEA,cAAc;AACb,SAAK,sBAAsB,IAAI,oBAAoB;AAAA,EACpD;AAAA,EAEA,yBAAyB,MAAM,KAAK;AACrC;AAEA,IAAM,UAAU,IAAI,QAAQ;AAC5B,IAAM,sBAAsB,QAAQ;","names":[]}