"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/library/Queue.ts
var Queue_exports = {};
__export(Queue_exports, {
  Queue: () => Queue
});
module.exports = __toCommonJS(Queue_exports);
var Queue = class {
  #queue = [];
  #promisePending = false;
  #stopped = false;
  add(promise) {
    return new Promise((resolve, reject) => {
      this.#queue.push({
        promise,
        resolve,
        reject
      });
      this.#handle();
    });
  }
  stop() {
    this.#stopped = true;
  }
  restart() {
    this.#stopped = false;
    this.#handle();
  }
  #handle() {
    if (this.#promisePending || this.#stopped) {
      return;
    }
    const item = this.#queue.shift();
    if (!item) {
      return;
    }
    try {
      this.#promisePending = true;
      item.promise().then((value) => this.#resolve(() => item.resolve(value))).catch((err) => this.#resolve(() => item.reject(err)));
    } catch (err) {
      this.#resolve(() => item.reject(err));
    }
  }
  #resolve(callback) {
    this.#promisePending = false;
    callback();
    this.#handle();
  }
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  Queue
});
//# sourceMappingURL=Queue.js.map