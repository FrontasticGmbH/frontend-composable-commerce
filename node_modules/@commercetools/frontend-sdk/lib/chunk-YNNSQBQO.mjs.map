{"version":3,"sources":["../src/library/SDK.ts"],"sourcesContent":["import { fetcher } from \"../helpers/fetcher\";\nimport { Queue } from \"./Queue\";\nimport { Event } from \"./Event\";\nimport { EventManager } from \"./EventManager\";\nimport { StandardEvents } from \"../types/events/StandardEvents\";\nimport { Events } from \"../types/events/Events\";\nimport { Currency } from \"../types/Currency\";\nimport { SDKResponse } from \"../types/SDKResponse\";\nimport { FetchError } from \"./FetchError\";\nimport { ActionError } from \"./ActionError\";\nimport { PageError } from \"./PageError\";\nimport {\n\tPageApi,\n\tPageFolderListResponse,\n\tPagePreviewResponse,\n\tPageResponse,\n} from \"../types/api/page\";\nimport { generateQueryString } from \"../helpers/queryStringHelpers\";\nimport { AcceptedQueryTypes } from \"../types/Query\";\nimport { ServerOptions } from \"../types/cookieHandling/ServerOptions\";\nimport {\n\tDEFAULT_SESSION_LIFETIME,\n\tSDK_NOT_CONFIGURED_ERROR_MESSAGE,\n} from \"../constants\";\nimport { CookieManager } from \"../types/cookieHandling/CookieManager\";\nimport { dependencyContainer } from \"./DependencyContainer\";\nimport { CookieHandler } from \"./CookieHandler\";\n\ntype SDKConfig = {\n\tlocale: string;\n\tcurrency: Currency;\n\tendpoint: string;\n\tuseCurrencyInLocale?: boolean;\n\textensionVersion?: string;\n\tsessionLifetime?: number;\n\tcookieHandlingOverride?: CookieManager;\n};\n\nexport class SDK<ExtensionEvents extends Events> extends EventManager<\n\tStandardEvents & ExtensionEvents\n> {\n\t#hasBeenConfigured;\n\n\t#endpoint!: string;\n\t#locale!: Intl.Locale;\n\t#currency!: Currency;\n\t#useCurrencyInLocale!: boolean;\n\t#extensionVersion!: string;\n\t#actionQueue: Queue;\n\t#sessionLifetime!: number;\n\n\tset endpoint(url: string) {\n\t\turl = this.#normaliseUrl(url);\n\t\tif (url.indexOf(\"http\") === -1) {\n\t\t\turl = `https://${url}`;\n\t\t\t// Note the below doesn't support websocket connections but much more work would\n\t\t\t// be rquired for this anyway\n\t\t\tconsole.warn(\n\t\t\t\t`Protocol not supplied to endpoint, defaulting to https - ${url}`\n\t\t\t);\n\t\t}\n\t\t// remove \"/frontastic\" if applied\n\t\tthis.#endpoint = url.split(\"/frontastic\")[0];\n\t}\n\n\t/**\n\t * The full url endpoint to be called, to be set within the {@link configure} method.\n\t */\n\tget endpoint() {\n\t\treturn this.#endpoint;\n\t}\n\n\tset locale(locale: string) {\n\t\tthis.#locale = new Intl.Locale(locale);\n\t}\n\n\t/**\n\t * The string representing the combination of the ISO 639-1 language and ISO 3166-1 country code, to be set within the {@link configure} method.\n\t */\n\tget locale(): Intl.BCP47LanguageTag {\n\t\treturn this.#locale.baseName;\n\t}\n\n\t/**\n\t * @deprecated The string representing the locale in the posix format to be used internally.\n\t */\n\tget posixLocale(): string {\n\t\tconst apiFormattedLocale = this.locale.slice(0, 5).replace(\"-\", \"_\");\n\n\t\tif (this.#useCurrencyInLocale) {\n\t\t\treturn `${apiFormattedLocale}@${this.currency}`;\n\t\t} else {\n\t\t\treturn apiFormattedLocale;\n\t\t}\n\t}\n\n\t/**\n\t * The string representing the locale formatted to be used when communicating with the backend.\n\t */\n\tprivate get apiHubLocale(): string {\n\t\tconst apiFormattedLocale = this.locale.replace(\"-\", \"_\");\n\n\t\tif (this.#useCurrencyInLocale) {\n\t\t\treturn `${apiFormattedLocale}@${this.currency}`;\n\t\t} else {\n\t\t\treturn apiFormattedLocale;\n\t\t}\n\t}\n\n\tset currency(currency: Currency) {\n\t\tthis.#currency = currency;\n\t}\n\n\t/**\n\t * The string representing the ISO 3-Letter Currency Code, to be set within the {@link configure} method.\n\t */\n\tget currency() {\n\t\treturn this.#currency;\n\t}\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.#hasBeenConfigured = false;\n\t\tthis.#actionQueue = new Queue();\n\t}\n\n\t#throwIfNotConfigured() {\n\t\tif (!this.#hasBeenConfigured) {\n\t\t\tthrow new Error(SDK_NOT_CONFIGURED_ERROR_MESSAGE);\n\t\t}\n\t}\n\n\t#normaliseUrl = (url: string): string =>\n\t\turl.split(\"//\").reduce((previous, current) => {\n\t\t\tif (current === \"http:\" || current === \"https:\") {\n\t\t\t\treturn (current += \"/\");\n\t\t\t}\n\t\t\treturn `${previous}/${current}`;\n\t\t}, \"\");\n\n\t/**\n\t * The method that must be called prior to any other methods to configure the connection to the backend. An error is throw if not called prior.\n\t *\n\t * @param {string} config.locale - A string representing the combination of the ISO 639-1 language and ISO 3166-1 country code. For example \"en-DE\" or \"en_DE\".\n\t * @param {string} config.currency - A string representing the ISO 3-Letter Currency Code, for example EUR.\n\t * @param {string} config.endpoint - A string representing the full URL of the endpoint to be called.\n\t * @param {boolean} [config.useCurrencyInLocale=false] - An optional boolean, default false. To be set to true if currency is required in config.locale, for example en-GB@EUR.\n\t * @param {string} [config.extensionVersion=\"\"] - An optional string required for multitenancy projects, stored in the environment variable process.env.NEXT_PUBLIC_EXT_BUILD_ID to specify the extension version in which to connect.\n\t * @param {string} [config.sessionLifetime=7776000000] - An optional number of milliseconds in which to persist the session lifeTime, to override the {@link DEFAULT_SESSION_LIFETIME} of 3 months.\n\t * @param {CookieManager} [config.cookieHandlingOverride] - An optional cookie manager interface that contains all the cookie handling methods.\n\t *\n\t * @returns {void} Void.\n\t */\n\tconfigure(config: SDKConfig) {\n\t\tdependencyContainer().configure(\n\t\t\tconfig.cookieHandlingOverride ?? new CookieHandler()\n\t\t);\n\t\tthis.endpoint = config.endpoint;\n\t\tthis.configureLocale(config);\n\t\tthis.#useCurrencyInLocale = config.useCurrencyInLocale ?? false;\n\t\tthis.#extensionVersion = config.extensionVersion ?? \"\";\n\t\tthis.#sessionLifetime =\n\t\t\tconfig.sessionLifetime ?? DEFAULT_SESSION_LIFETIME;\n\n\t\tthis.#hasBeenConfigured = true;\n\t}\n\n\t/**\n\t * The method called to standardise the locale and currency inputs.\n\t *\n\t * @param {string} config.locale - A string representing the combination of the ISO 639-1 language and ISO 3166-1 country code. For example en-GB or en_GB.\n\t * @param {string} config.currency - A string representing the ISO 3-Letter Currency Code, for example EUR.\n\t *\n\t * @returns {void} Void.\n\t */\n\tconfigureLocale(config: Pick<SDKConfig, \"locale\" | \"currency\">) {\n\t\t// currency present in locale (posix modifier)\n\t\tconst [locale, currency] = config.locale.split(\"@\");\n\t\tif (currency) {\n\t\t\tthis.currency = currency as Currency;\n\t\t}\n\t\t// explicitly defined currency overrides that\n\t\tif (config.currency) {\n\t\t\tthis.currency = config.currency as Currency;\n\t\t}\n\n\t\tthis.locale = locale.replace(/_/g, \"-\");\n\n\t\t// set language, country\n\t\t// const [language, country] = locale.split(\"-\")\n\t\t// this.country = country;\n\t\t// this.language = language;\n\t}\n\n\t#triggerError(error: ActionError | PageError) {\n\t\tthis.trigger(\n\t\t\t// @ts-ignore\n\t\t\tnew Event({\n\t\t\t\teventName: \"errorCaught\",\n\t\t\t\tdata: {\n\t\t\t\t\terror: error,\n\t\t\t\t},\n\t\t\t})\n\t\t);\n\t}\n\n\t#handleError(\n\t\toptions:\n\t\t\t| {\n\t\t\t\t\ttype: \"ActionError\";\n\t\t\t\t\terror: string | Error;\n\t\t\t\t\tactionName: string;\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\ttype: \"PageError\";\n\t\t\t\t\terror: string | Error;\n\t\t\t\t\tpath: string;\n\t\t\t  }\n\t): {\n\t\tisError: true;\n\t\terror: FetchError;\n\t} {\n\t\tlet error: FetchError;\n\t\tif (options.error instanceof FetchError) {\n\t\t\terror = options.error;\n\t\t} else {\n\t\t\terror = new FetchError(<string | Error>options.error);\n\t\t}\n\t\tthis.#triggerError(\n\t\t\toptions.type === \"ActionError\"\n\t\t\t\t? new ActionError(options.actionName, error)\n\t\t\t\t: new PageError(options.path, error)\n\t\t);\n\t\treturn { isError: true, error: error };\n\t}\n\n\t#getDefaultAPIHeaders() {\n\t\treturn {\n\t\t\t\"Frontastic-Locale\": this.apiHubLocale,\n\t\t\t\"Frontastic-Currency\": this.currency,\n\t\t\t...(this.#extensionVersion\n\t\t\t\t? {\n\t\t\t\t\t\t\"Commercetools-Frontend-Extension-Version\":\n\t\t\t\t\t\t\tthis.#extensionVersion,\n\t\t\t\t  }\n\t\t\t\t: {}),\n\t\t};\n\t}\n\n\t/**\n\t * The method used to call extension actions.\n\t *\n\t * @param {string} options.actionName - The name of the action corresponding to the location of the extension, for example \"product/getProduct\".\n\t * @param {unknown} [options.payload] - An optional key, value pair object payload to be serialised into the body of the request.\n\t * @param {Object.<string, number, boolean, string[], number[], boolean[]>} [options.query] - An optional key, value pair object to be serialised into the url query.\n\t * @param {Object} [options.serverOptions] - An optional object containing the res and req objects for ServerResponse and IncomingMessage with cookies respectively. Required for server-side rendering session management.\n\t *\n\t * @returns {PromiseLike<Object>} An object with a boolean isError property, and either an error or data property for true and false respectively. Type of data will match generic argument supplied to method.\n\t */\n\tasync callAction<ReturnData>(options: {\n\t\tactionName: string;\n\t\tpayload?: unknown;\n\t\tquery?: AcceptedQueryTypes;\n\t\tserverOptions?: ServerOptions;\n\t}): Promise<SDKResponse<ReturnData>> {\n\t\tthis.#throwIfNotConfigured();\n\t\toptions.payload = options.payload ?? {};\n\t\tconst params = options.query ? generateQueryString(options.query) : \"\";\n\t\tconst fetcherOptions = {\n\t\t\tmethod: \"POST\",\n\t\t\tbody: JSON.stringify(options.payload),\n\t\t\theaders: this.#getDefaultAPIHeaders(),\n\t\t};\n\n\t\tlet result: FetchError | Awaited<ReturnData>;\n\t\ttry {\n\t\t\tresult = await this.#actionQueue.add<ReturnData | FetchError>(\n\t\t\t\t() => {\n\t\t\t\t\treturn fetcher<ReturnData>(\n\t\t\t\t\t\tthis.#normaliseUrl(\n\t\t\t\t\t\t\t`${this.#endpoint}/frontastic/action/${\n\t\t\t\t\t\t\t\toptions.actionName\n\t\t\t\t\t\t\t}${params}`\n\t\t\t\t\t\t),\n\t\t\t\t\t\tfetcherOptions,\n\t\t\t\t\t\toptions.serverOptions,\n\t\t\t\t\t\tthis.#sessionLifetime\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t);\n\t\t} catch (error) {\n\t\t\treturn this.#handleError({\n\t\t\t\ttype: \"ActionError\",\n\t\t\t\terror: <string | Error>error,\n\t\t\t\tactionName: options.actionName,\n\t\t\t});\n\t\t}\n\t\tif (result instanceof Error) {\n\t\t\treturn this.#handleError({\n\t\t\t\ttype: \"ActionError\",\n\t\t\t\terror: <string | Error>result.toString(),\n\t\t\t\tactionName: options.actionName,\n\t\t\t});\n\t\t}\n\n\t\treturn { isError: false, data: <ReturnData>result };\n\t}\n\n\t/**\n\t * The domain to call page methods on the API hub.\n\t */\n\tpage: PageApi = {\n\t\tgetPage: async (options: {\n\t\t\tpath: string;\n\t\t\tquery?: AcceptedQueryTypes;\n\t\t\tserverOptions?: ServerOptions;\n\t\t}) => {\n\t\t\tthis.#throwIfNotConfigured();\n\t\t\tconst params = options.query\n\t\t\t\t? generateQueryString(options.query)\n\t\t\t\t: \"\";\n\t\t\tconst fetcherOptions = {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: {\n\t\t\t\t\t\"Frontastic-Path\": options.path,\n\t\t\t\t\t...this.#getDefaultAPIHeaders(),\n\t\t\t\t},\n\t\t\t};\n\n\t\t\tlet result: FetchError | Awaited<PageResponse>;\n\t\t\ttry {\n\t\t\t\tresult = await fetcher<PageResponse>(\n\t\t\t\t\tthis.#normaliseUrl(\n\t\t\t\t\t\t`${this.#endpoint}/frontastic/page${params}`\n\t\t\t\t\t),\n\t\t\t\t\tfetcherOptions,\n\t\t\t\t\toptions.serverOptions,\n\t\t\t\t\tthis.#sessionLifetime\n\t\t\t\t);\n\t\t\t} catch (error) {\n\t\t\t\treturn this.#handleError({\n\t\t\t\t\ttype: \"PageError\",\n\t\t\t\t\terror: <string | Error>error,\n\t\t\t\t\tpath: options.path,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (result instanceof Error) {\n\t\t\t\treturn this.#handleError({\n\t\t\t\t\ttype: \"PageError\",\n\t\t\t\t\terror: <string | Error>result.toString(),\n\t\t\t\t\tpath: options.path,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn { isError: false, data: <PageResponse>result };\n\t\t},\n\t\tgetPreview: async (options: {\n\t\t\tpreviewId: string;\n\t\t\tserverOptions?: ServerOptions;\n\t\t}) => {\n\t\t\tthis.#throwIfNotConfigured();\n\t\t\tconst fetcherOptions = {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: this.#getDefaultAPIHeaders(),\n\t\t\t};\n\t\t\tlet result: FetchError | Awaited<PagePreviewResponse>;\n\t\t\tconst path = `/preview?previewId=${options.previewId}&locale=${this.apiHubLocale}`;\n\n\t\t\ttry {\n\t\t\t\tresult = await fetcher<PagePreviewResponse>(\n\t\t\t\t\tthis.#normaliseUrl(`${this.#endpoint}/frontastic${path}`),\n\t\t\t\t\tfetcherOptions,\n\t\t\t\t\toptions.serverOptions,\n\t\t\t\t\tthis.#sessionLifetime\n\t\t\t\t);\n\t\t\t} catch (error) {\n\t\t\t\treturn this.#handleError({\n\t\t\t\t\ttype: \"PageError\",\n\t\t\t\t\terror: <string | Error>error,\n\t\t\t\t\tpath: path,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (result instanceof Error) {\n\t\t\t\treturn this.#handleError({\n\t\t\t\t\ttype: \"PageError\",\n\t\t\t\t\terror: <string | Error>result.toString(),\n\t\t\t\t\tpath: path,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn { isError: false, data: <PagePreviewResponse>result };\n\t\t},\n\t\tgetPages: async (\n\t\t\toptions: {\n\t\t\t\tpath?: string;\n\t\t\t\tdepth?: number;\n\t\t\t\ttypes?: \"static\";\n\t\t\t\tserverOptions?: ServerOptions;\n\t\t\t} = {\n\t\t\t\tdepth: 16,\n\t\t\t\ttypes: \"static\",\n\t\t\t}\n\t\t) => {\n\t\t\tthis.#throwIfNotConfigured();\n\t\t\toptions.depth = options.depth ?? 16;\n\t\t\toptions.types = options.types ?? \"static\";\n\t\t\tconst fetcherOptions = {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: this.#getDefaultAPIHeaders(),\n\t\t\t};\n\t\t\tlet result: FetchError | Awaited<PageFolderListResponse>;\n\t\t\tconst path = `/structure?locale=${this.apiHubLocale}${\n\t\t\t\toptions.path ? `&path=${options.path}` : \"\"\n\t\t\t}&depth=${options.depth}`;\n\n\t\t\ttry {\n\t\t\t\tresult = await fetcher<PageFolderListResponse>(\n\t\t\t\t\tthis.#normaliseUrl(`${this.#endpoint}/frontastic${path}`),\n\t\t\t\t\tfetcherOptions,\n\t\t\t\t\toptions.serverOptions,\n\t\t\t\t\tthis.#sessionLifetime\n\t\t\t\t);\n\t\t\t} catch (error) {\n\t\t\t\treturn this.#handleError({\n\t\t\t\t\ttype: \"PageError\",\n\t\t\t\t\terror: <string | Error>error,\n\t\t\t\t\tpath: path,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (result instanceof Error) {\n\t\t\t\treturn this.#handleError({\n\t\t\t\t\ttype: \"PageError\",\n\t\t\t\t\terror: <string | Error>result.toString(),\n\t\t\t\t\tpath: path,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn { isError: false, data: <PageFolderListResponse>result };\n\t\t},\n\t};\n}\n"],"mappings":"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","names":[]}