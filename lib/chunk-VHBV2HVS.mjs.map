{"version":3,"sources":["../src/library/actions/ProjectActions.ts"],"sourcesContent":["import { ProjectSettings } from \"shared/types/ProjectSettings\";\nimport { Event, SDK, ServerOptions } from \"@commercetools/frontend-sdk\";\nimport { GetProjectSettingsAction } from \"../../types/actions/ProjectActions\";\nimport { ComposableCommerceEvents } from \"../../types/events/ComposableCommerceEvents\";\n\nexport type ProjectActions = {\n\tgetSettings: GetProjectSettingsAction;\n};\n\nexport const getProjectActions = (\n\tsdk: SDK<ComposableCommerceEvents>\n): ProjectActions => {\n\treturn {\n\t\tgetSettings: async (\n\t\t\toptions: { serverOptions?: ServerOptions } = {}\n\t\t) => {\n\t\t\tconst response = await sdk.callAction<ProjectSettings>({\n\t\t\t\tactionName: \"project/getProjectSettings\",\n\t\t\t\tserverOptions: options.serverOptions,\n\t\t\t});\n\n\t\t\tif (response.isError === false) {\n\t\t\t\tsdk.trigger(\n\t\t\t\t\tnew Event({\n\t\t\t\t\t\teventName: \"projectSettingsFetched\",\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tprojectSettings: response.data,\n\t\t\t\t\t\t},\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn response;\n\t\t},\n\t};\n};\n"],"mappings":";AACA,SAAS,aAAiC;AAQnC,IAAM,oBAAoB,CAChC,QACoB;AACpB,SAAO;AAAA,IACN,aAAa,OACZ,UAA6C,CAAC,MAC1C;AACJ,YAAM,WAAW,MAAM,IAAI,WAA4B;AAAA,QACtD,YAAY;AAAA,QACZ,eAAe,QAAQ;AAAA,MACxB,CAAC;AAED,UAAI,SAAS,YAAY,OAAO;AAC/B,YAAI;AAAA,UACH,IAAI,MAAM;AAAA,YACT,WAAW;AAAA,YACX,MAAM;AAAA,cACL,iBAAiB,SAAS;AAAA,YAC3B;AAAA,UACD,CAAC;AAAA,QACF;AAAA,MACD;AACA,aAAO;AAAA,IACR;AAAA,EACD;AACD;","names":[]}